# wilmouths <wilmouthsteven@gmail.com>, 2021.
# Tl <rflma99@pm.me>, 2022.
# NicolasBFR <nicolas.boganski@epita.fr>, 2022.
# jean-luc MATTEI <jlucm@free.fr>, 2022.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2022-12-07 05:47+0000\n"
"Last-Translator: jean-luc MATTEI <jlucm@free.fr>\n"
"Language-Team: French <https://hosted.weblate.org/projects/klipper/packaging/fr/>\n"
"Language: fr\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.15-dev\n"

msgid ""
"Klipper is somewhat of a packaging anomaly among python programs, as it "
"doesn't use setuptools to build and install. Some notes regarding how best "
"to package it are as follows:"
msgstr ""
"Klipper est en quelque sorte comme une anomalie de packaging au sein des "
"programmes Python, car il ne requiert pas d'outils de configuration pour "
"être construit et installé. Quelques notes en ce qui concerne comment "
"package au mieux sont :"

msgid "C modules"
msgstr "Modules C"

msgid ""
"Klipper uses a C module to handle some kinematics calculations more quickly."
" This module needs to be compiled at packaging time to avoid introducing a "
"runtime dependency on a compiler. To compile the C module, run `python2 "
"klippy/chelper/__init__.py`."
msgstr ""
"Klipper utilise un module en langage C pour gérer plus rapidement certains "
"calculs cinématiques. Ce module doit être compilé au moment de l'empaquetage"
" pour éviter d'introduire une dépendance d'exécution sur un compilateur. "
"Pour compiler le module C, exécutez `python2 klippy/chelper/__init__.py`."

msgid "Compiling python code"
msgstr "Compiler du code python"

msgid ""
"Many distributions have a policy of compiling all python code before "
"packaging to improve startup time. You can do this by running `python2 -m "
"compileall klippy`."
msgstr ""
"De nombreuses distributions compilent tout le code python avant de "
"l'empaqueter pour améliorer le temps de démarrage. Vous pouvez le faire en "
"exécutant `python2 -m compileall klippy`."

msgid "Versioning"
msgstr "Versionnage"

msgid ""
"If you are building a package of Klipper from git, it is usual practice not "
"to ship a .git directory, so the versioning must be handled without git. To "
"do this, use the script shipped in `scripts/make_version.py` which should be"
" run as follows: `python2 scripts/make_version.py YOURDISTRONAME > "
"klippy/.version`."
msgstr ""
"Si vous construisez un paquet de Klipper à partir de git, il est d'usage de "
"ne pas envoyer de répertoire .git, donc la gestion des versions doit être "
"gérée sans git. Pour ce faire, utilisez le script fourni dans "
"`scripts/make_version.py` qui doit être exécuté comme suit : `python2 "
"scripts/make_version.py YOURDISTRONAME > klippy/.version`."

msgid "Sample packaging script"
msgstr "Exemple de script de précompilation"

#: docs/Packaging.md:block 1 (header)
msgid "Packaging Klipper"
msgstr "Packager Klipper"

#: docs/Packaging.md:block 10 (paragraph)
msgid ""
"klipper-git is packaged for Arch Linux, and has a PKGBUILD (package build "
"script) available at [Arch User "
"Repositiory](https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=klipper-"
"git)."
msgstr ""
"klipper-git is packaged for Arch Linux, and has a PKGBUILD (package build "
"script) available at [Arch User "
"Repositiory](https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=klipper-"
"git)."

#~ msgid "Packaging klipper"
#~ msgstr "Packaging klipper"

#~ msgid ""
#~ "klipper-git is packaged for Arch Linux, and has a PKGBUILD (package build "
#~ "script) available at "
#~ "https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=klipper-git."
#~ msgstr ""
